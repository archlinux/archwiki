# Helper functions for (non-nested) bracketing constructs

# The "[[" and "]]" are atomic tokens; they won't match any unicode input
# character.  Sometime we need additional delimiters, so we've also defined
# "<<" and ">>" (which shouldn't ever appear in output).
define BRACKETS "[[" | "]]" | "<<" | ">>" ;
define REMOVEBRACKETS BRACKETS -> 0 ;
# This is useful to assert that an input doesn't have brackets, simplifying
# the FST.
define NO'BRACKETS [\BRACKETS]* ;

# Invert the sense of the brackets
# Ie, bracket the stuff not in brackets, remove brackets from bracketed stuff.
define SWAPBRACKETS [
  "[["->"]]" ,,
  "]]"->"[["
] .o. [
  [..]->"[[" || .#. _
] .o. [
  [..]->"]]" || _ .#.
] .o. [
  "[[" "]]" -> 0 || .#. _ , _ .#.
];
