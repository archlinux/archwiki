{
	"@metadata": {
		"authors": [
			"Amire80",
			"Bill Pirkle",
			"Matma Rex",
			"McDutchie",
			"Raymond",
			"Tim Starling"
		]
	},
	"rest-prefix-mismatch": "Error message for REST API debugging, shown if $wgRestPath is incorrect or otherwise not matched. Parameters:\n* $1: The requested path.\n* $2: The configured root path ($wgRestPath).",
	"rest-wrong-method": "Error message for REST API debugging, shown if the HTTP method is incorrect. Parameters:\n* $1: The received request method.\n* $2: A comma-separated list of allowed methods for this path.\n* $3: The number of items in the list $2",
	"rest-no-match": "Error message for REST API debugging, shown if the path has the correct prefix but did not match any registered handler. Parameters:\n* $1: The received request path, relative to $wgRestPath.",
	"rest-nonexistent-title": "Error message for REST API debugging, shown if the specified title does not exist. Parameters:\n* $1 The page title.",
	"rest-nonexistent-title-revision": "Error message for REST API debugging, shown if the specified revision of the specified title does not exist. Parameters:\n* $1 The revision ID.\n* $2 The page title.",
	"rest-nonexistent-revision": "Error message for REST API debugging, shown when the specified revision does not exist. Parameters:\n* $1 The revision id.",
	"rest-nonexistent-user": "Error message for REST API debugging, shown when the specified user does not exist. Parameters:\n* $1 The username.",
	"rest-invalid-user": "Error message for REST API debugging, shown when the specified username is invalid. Parameters:\n* $1 The username.",
	"rest-invalid-title": "Error message indicating that the given title is invalid or does not refer to a wiki page (e.g. it's a special page). Parameters:\n* $1 The page title",
	"rest-unsupported-content-type": "Error message for REST API debugging, shown when the specified content type is invalid. Parameters:\n* $1 The content type.",
	"rest-permission-error": "Error message for REST API debugging, shown when the user is denied permission to perform an action. Parameters:\n* $1 The name of the action.",
	"rest-permission-denied-anon": "Error message for REST API debugging, shown when the user is anonymous and therefore is denied permission to a resource",
	"rest-permission-denied-title": "Error message for REST API debugging, shown if the user doesn't have read access to the specified title. Parameters:\n* $1 The page title",
	"rest-permission-denied-revision": "Error message for REST API debugging, shown when the user doesn't have access to the specified revision. Parameters:\n* $1: the specified revision.",
	"rest-rate-limit-exceeded": "Error message for REST API debugging, shown when a rate limit was exceeded by the request",
	"rest-resource-limit-exceeded": "Error message for REST API debugging, shown when the resource limit was exceeded by the request",
	"rest-pagehistory-incompatible-params": "Error message for REST API debugging, shown if incompatible parameters are specified.",
	"rest-pagehistory-param-range-error": "Error message for REST API debugging, shown if a revision id is provided but is out of range.",
	"rest-pagehistory-timestamp-error": "Error message for REST API debugging, shown if an error occurred loading the timestamp for the specified revision.",
	"rest-pagehistorycount-type-unrecognized": "Error message for REST API debugging, shown if the specified type is not valid.",
	"rest-pagehistorycount-parameters-invalid": "Error message for REST API debugging, shown when an unsupported combination of parameters has been provided.",
	"rest-compare-page-mismatch": "Error message for REST API debugging, shown when the revisions belong to different pages.",
	"rest-compare-permission-denied": "Error message for REST API debugging, shown when the user doesn't have access to the specified revisions.",
	"rest-compare-nonexistent": "Error message for REST API debugging, shown when one of the revisions does not exist. Parameters:\n* $1: The parameter name, either \"from\" or \"to\".",
	"rest-compare-inaccessible": "Error message for REST API debugging, shown when the text of one of the revisions has been deleted or suppressed so that only privileged users can view it. Parameters:\n* $1: The parameter name, either \"from\" or \"to\".",
	"rest-compare-wrong-content": "Error message for REST API debugging, shown when Content::convert() fails to convert the revision to text. Parameters:\n* $1: The slot role name, usually \"main\".\n* $2: The parameter name, either \"from\" or \"to\".",
	"rest-compare-wikidiff2": "Error message for REST API debugging.",
	"rest-pagehistorycount-too-many-revisions": "Error message for REST API debugging, shown when the page has too many revisions to retrieve the count.",
	"rest-search-error": "Error message for REST API debugging, shown when an error occurs from search engine/database while searching for term. Parameters:\n* $1: The cause of the error.",
	"rest-page-source-type-error": "Error message for REST API debugging, shown when trying to retrieve content for a page that has an unsupported content type",
	"rest-no-revision": "Error message for REST API debugging, shown when fetching a revision by page ID fails. Parameters:\n* $1: The page ID we are getting revision from",
	"rest-media-too-many-links": "Error message for REST API debugging, shown when there are too many media links on a page. Parameters:\n* $1: The page title.\n* $2: The number of links allowed.",
	"rest-html-backend-error": "Error message for REST API debugging, shown when fetching Parsoid HTML from backend has failed. Parameters:\n* $1: The technical error message from parsoid.",
	"rest-html-stash-failure": "Error message for REST API debugging, shown when stash Parsoid HTML failed.",
	"rest-bad-json-body": "Error message for REST API debugging, shown when request body did not contain a JSON encoded object.",
	"rest-json-body-parse-error": "Error message for REST API debugging, shown when parsing the JSON body failed. Parameters:\n* $1: the error message from the JSON parser.",
	"rest-missing-body-field": "Error message for REST API debugging, shown when there is a mandatory field missing from the request body. Parameters:\n* $1: The field name",
	"rest-body-validation error": "Error message for REST API debugging, shown when the request body is not valid. Parameters:\n* $1: The validation error (from one of the paramvalidator-* messages)",
	"rest-extraneous-body-fields": "Error message for REST API debugging, shown when there are extraneous fields in the request body. Parameters:\n* $1: A comma-separated list of unrecognized fields",
	"rest-bad-content-model": "Error message for REST API debugging, shown when an unknown content model is specified. Parameters:\n* $1: The content model name",
	"rest-update-cannot-create-page": "Error message for REST API debugging, shown when creation of a page was requested via a PUT with no base revision ID, but the page already exists. Parameters:\n* $1: The title of the page",
	"rest-extraneous-csrf-token": "Error message for REST API debugging, shown when an CSRF token was provided by the client, even though the authentication mechanisms used is safe against CSRF attacks.",
	"rest-cannot-load-file": "Error message for REST API debugging, shown when a media file could not be loaded. Parameters:\n* $1: The title of the page",
	"rest-cross-origin-anon-write": "Error message for REST API debugging, shown when a client attempts to make a cross-origin anon write.",
	"rest-requires-safe-against-csrf": "Error message for REST API debugging, shown when a handler requires a [[:w:Cross-site request forgery|CSRF]]-safe session provider, but a non-CSRF-safe session provider was used.",
	"rest-badtoken": "Error message for REST API debugging, shown when an invalid CSRF token was provided.",
	"rest-badtoken-missing": "Error message for REST API debugging, shown when no anti-CSRF security token was provided.\n\n'''Note: CSRF is a type of attack ([[:w:Cross-site request forgery|Cross-Site Request Forgery]]), so \"CSRF-safe\" means \"safe against CSRF attacks\".'''",
	"rest-badtoken-nosession": "Error message for REST API debugging, shown when an invalid CSRF token was provided and it seems like the client failed to include authentication information.",
	"rest-mock-error": "Error message for REST API debugging, shown when there is an error mocking",
	"rest-specified-revision-unavailable": "Error message for REST API debugging, shown when the specified revision is deleted or suppressed",
	"rest-previous-revision-unavailable": "Error message for REST API debugging, shown when the previous revision can not be found",
	"rest-requires-content-type-header": "Error message for REST API debugging, shown when a request payload requires a Content-Type header but none is provided.",
	"rest-transform-missing-html": "Error message for REST API debugging, shown when no html is supplied",
	"rest-transform-missing-title": "Error message for REST API debugging, shown when no title or wikitext is provided",
	"rest-unsupported-target-format": "Error message for REST API debugging, shown when the requested target format is not supported",
	"rest-parsoid-resource-exceeded": "Error message for REST API debugging, shown when a resource limit is exceeded while converting between wikitext and HTML.",
	"rest-parsoid-error": "Error message for REST API debugging, indicating the an unspecified backend error occurred while converting between wikitext and HTML.\n\n[[:mw:Parsoid|Parsoid]] is the name of a software library; do not translate that name.",
	"rest-bad-stash-key": "Error message for REST API debugging, shown when When the rednerid or etag given in the request is not a valid stash key.",
	"rest-html-key-expected": "Error message for REST API debugging, shown when when the \"html\" key is missing from the request body",
	"rest-invalid-transform": "Error message for REST API debugging, shown when an unsupported transformation is requested from the transform handler. Parameters:\n* $1: The source format \n* $2: The target format",
	"rest-request-body-expected": "Error message for REST API debugging, shown when the request method expects a request body",
	"rest-request-body-unaccepted": "Error message for REST API debugging, shown when the request method does not accept a request body"
}
