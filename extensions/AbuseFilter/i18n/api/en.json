{
	"@metadata": {
		"authors": [
			"Andrew Garrett",
			"Kunal Mehta",
			"Brad Jorsch",
			"Matěj Suchánek"
		]
	},
	"apihelp-abusefiltercheckmatch-description": "Check to see if an AbuseFilter matches a set of variables, an edit, or a logged AbuseFilter event.\n\nvars, rcid or logid is required however only one may be used.",
	"apihelp-abusefiltercheckmatch-summary": "Check to see if an AbuseFilter matches a set of variables, an edit, or a logged AbuseFilter event.",
	"apihelp-abusefiltercheckmatch-extended-description": "vars, rcid or logid is required however only one may be used.",
	"apihelp-abusefiltercheckmatch-param-filter": "The full filter text to check for a match.",
	"apihelp-abusefiltercheckmatch-param-vars": "JSON encoded array of variables to test against.",
	"apihelp-abusefiltercheckmatch-param-rcid": "Recent change ID to check against.",
	"apihelp-abusefiltercheckmatch-param-logid": "Abuse filter log ID to check against.",
	"apihelp-abusefiltercheckmatch-example-1": "Test if recent change ID 15 matches a simple filter",
	"apihelp-abusefilterchecksyntax-description": "Check syntax of an AbuseFilter filter.",
	"apihelp-abusefilterchecksyntax-summary": "Check syntax of an AbuseFilter filter.",
	"apihelp-abusefilterchecksyntax-param-filter": "The full filter text to check syntax on.",
	"apihelp-abusefilterchecksyntax-example-1": "Check syntax of a valid filter",
	"apihelp-abusefilterchecksyntax-example-2": "Check syntax of an invalid filter",
	"apihelp-abusefilterevalexpression-description": "Evaluates an AbuseFilter expression.",
	"apihelp-abusefilterevalexpression-summary": "Evaluates an AbuseFilter expression.",
	"apihelp-abusefilterevalexpression-param-expression": "The expression to evaluate.",
	"apihelp-abusefilterevalexpression-param-prettyprint": "Whether the result should be pretty-printed.",
	"apihelp-abusefilterevalexpression-example-1": "Evaluate a simple expression",
	"apihelp-abusefilterevalexpression-example-2": "Evaluate a simple expression, formatting the result",
	"apihelp-abusefilterunblockautopromote-description": "Unblocks a user from receiving autopromotions due to an abusefilter consequence.",
	"apihelp-abusefilterunblockautopromote-summary": "Unblocks a user from receiving autopromotions due to an abusefilter consequence.",
	"apihelp-abusefilterunblockautopromote-param-user": "Username of the user you want to unblock.",
	"apihelp-abusefilterunblockautopromote-example-1": "Remove the block on [[User:Example]]'s autopromotion",
	"apihelp-query+abusefilters-description": "Show details of the abuse filters.",
	"apihelp-query+abusefilters-summary": "Show details of the abuse filters.",
	"apihelp-query+abusefilters-param-startid": "The filter ID to start enumerating from.",
	"apihelp-query+abusefilters-param-endid": "The filter ID to stop enumerating at.",
	"apihelp-query+abusefilters-param-show": "Show only filters which meet these criteria.",
	"apihelp-query+abusefilters-param-limit": "The maximum number of filters to list.",
	"apihelp-query+abusefilters-param-prop": "Which properties to get.",
	"apihelp-query+abusefilters-example-1": "List enabled public filters",
	"apihelp-query+abusefilters-example-2": "Show some details about filters",
	"apihelp-query+abuselog-description": "Show events that were caught by one of the abuse filters.",
	"apihelp-query+abuselog-summary": "Show events that were caught by one of the abuse filters.",
	"apihelp-query+abuselog-param-logid": "Show an entry with the given log ID.",
	"apihelp-query+abuselog-param-start": "The timestamp to start enumerating from.",
	"apihelp-query+abuselog-param-end": "The timestamp to stop enumerating at.",
	"apihelp-query+abuselog-param-user": "Show only entries done by a given user or IP address.",
	"apihelp-query+abuselog-param-title": "Show only entries occurring on a given page.",
	"apihelp-query+abuselog-param-filter": "Show only entries that were caught by the given filter IDs. Separate with pipes, prefix with \"$1\" for global filters.",
	"apihelp-query+abuselog-param-filter-central": "Show only entries that were caught by the given filter IDs. Separate with pipes.",
	"apihelp-query+abuselog-param-limit": "The maximum amount of entries to list.",
	"apihelp-query+abuselog-param-prop": "Which properties to get.",
	"apihelp-query+abuselog-param-wiki": "Wiki to show hits from.",
	"apihelp-query+abuselog-example-1": "Show recent log entries",
	"apihelp-query+abuselog-example-2": "Show recent log entries for [[API]]",
	"apihelp-abuselogprivatedetails-description": "View private details of an AbuseLog entry.",
	"apihelp-abuselogprivatedetails-summary": "View private details of an AbuseLog entry.",
	"apihelp-abuselogprivatedetails-param-logid": "The ID of the AbuseLog entry to be checked.",
	"apihelp-abuselogprivatedetails-param-reason": "A valid reason for performing the check.",
	"apihelp-abuselogprivatedetails-example-1": "Get private details for the AbuseLog entry with ID 1, using the reason \"example\".",
	"apierror-abusefilter-canttest": "You don't have permission to test abuse filters.",
	"apierror-abusefilter-cantcheck": "You don't have permission to check syntax of abuse filters.",
	"apierror-abusefilter-canteval": "You don't have permission to evaluate AbuseFilter expressions.",
	"apierror-abusefilter-nosuchlogid": "There is no abuselog entry with the id $1.",
	"apierror-abusefilter-badsyntax": "The filter has invalid syntax."
}
